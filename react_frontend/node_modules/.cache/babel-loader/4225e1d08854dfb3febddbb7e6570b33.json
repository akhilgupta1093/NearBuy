{"ast":null,"code":"import { CART_ADD_ITEM } from '../constants/cartConstants';\nimport axios from 'axios';\n\nconst addToCart = (productId, qty) => async dispatch => {\n  try {\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: CART_ADD_ITEM,\n      payload: {\n        product: data._id,\n        name: data.name,\n        image: data.image,\n        price: data.price,\n        countInStock: data.countInStock,\n        qty: qty\n      }\n    });\n  } catch (error) {}\n};\n\nconst removeFromCart = productId => dispatch => {\n  dispatch({\n    type: CART_REMOVE_ITEM,\n    payload: productId\n  });\n};\n\nexport { addToCart };","map":{"version":3,"sources":["/Users/akhilgupta/Documents/apps baby/Amazona/frontend/src/actions/cartActions.js"],"names":["CART_ADD_ITEM","axios","addToCart","productId","qty","dispatch","data","get","type","payload","product","_id","name","image","price","countInStock","error","removeFromCart","CART_REMOVE_ITEM"],"mappings":"AAAA,SAASA,aAAT,QAA8B,4BAA9B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,SAAS,GAAG,CAACC,SAAD,EAAYC,GAAZ,KAAoB,MAAOC,QAAP,IAAoB;AACxD,MAAI;AACF,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAML,KAAK,CAACM,GAAN,CAAU,mBAAmBJ,SAA7B,CAAvB;AACAE,IAAAA,QAAQ,CAAC;AAACG,MAAAA,IAAI,EAAER,aAAP;AAAsBS,MAAAA,OAAO,EAAE;AACtCC,QAAAA,OAAO,EAAEJ,IAAI,CAACK,GADwB;AAEtCC,QAAAA,IAAI,EAAEN,IAAI,CAACM,IAF2B;AAGtCC,QAAAA,KAAK,EAAEP,IAAI,CAACO,KAH0B;AAItCC,QAAAA,KAAK,EAAER,IAAI,CAACQ,KAJ0B;AAKtCC,QAAAA,YAAY,EAAET,IAAI,CAACS,YALmB;AAMtCX,QAAAA,GAAG,EAAEA;AANiC;AAA/B,KAAD,CAAR;AAQD,GAVD,CAUE,OAAOY,KAAP,EAAc,CAEf;AACF,CAdD;;AAgBA,MAAMC,cAAc,GAAId,SAAD,IAAeE,QAAQ,IAAI;AAChDA,EAAAA,QAAQ,CAAC;AAACG,IAAAA,IAAI,EAAEU,gBAAP;AAAyBT,IAAAA,OAAO,EAAEN;AAAlC,GAAD,CAAR;AACD,CAFD;;AAIA,SAASD,SAAT","sourcesContent":["import { CART_ADD_ITEM } from '../constants/cartConstants';\nimport axios from 'axios'\n\nconst addToCart = (productId, qty) => async (dispatch) => {\n  try {\n    const { data } = await axios.get(\"/api/products/\" + productId);\n    dispatch({type: CART_ADD_ITEM, payload: {\n      product: data._id,\n      name: data.name,\n      image: data.image,\n      price: data.price,\n      countInStock: data.countInStock,\n      qty: qty}\n    })\n  } catch (error) {\n\n  }\n}\n\nconst removeFromCart = (productId) => dispatch => {\n  dispatch({type: CART_REMOVE_ITEM, payload: productId})\n}\n\nexport { addToCart };\n"]},"metadata":{},"sourceType":"module"}
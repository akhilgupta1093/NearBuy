{"ast":null,"code":"import axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL } from '../constants/userConstants';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../constants/userConstants';\n\nconst signin = (email, password) => async dispatch => {\n  dispatch({\n    type: USER_SIGNIN_REQUEST,\n    payload: {\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/signin', {\n      email,\n      password\n    });\n    dispatch({\n      type: USER_SIGNIN_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_SIGNIN_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst register = (name, email, password) => async dispatch => {\n  dispatch({\n    type: USER_REGISTER_REQUEST,\n    payload: {\n      name,\n      email,\n      password\n    }\n  });\n\n  try {\n    const {\n      data\n    } = await axios.post('/api/users/register', {\n      name,\n      email,\n      password\n    });\n    dispatch({\n      type: USER_REGISTER_SUCCESS,\n      payload: data\n    });\n    Cookie.set('userInfo', JSON.stringify(data));\n  } catch (error) {\n    dispatch({\n      type: USER_REGISTER_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { signin, register };","map":{"version":3,"sources":["/Users/akhilgupta/Documents/apps baby/NearBuy/frontend/src/actions/userActions.js"],"names":["axios","Cookie","USER_SIGNIN_REQUEST","USER_SIGNIN_SUCCESS","USER_SIGNIN_FAIL","USER_REGISTER_REQUEST","USER_REGISTER_SUCCESS","USER_REGISTER_FAIL","signin","email","password","dispatch","type","payload","data","post","set","JSON","stringify","error","message","register","name"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,MAAP,MAAmB,WAAnB;AACA,SAASC,mBAAT,EAA8BC,mBAA9B,EAAmDC,gBAAnD,QAA2E,4BAA3E;AACA,SAASC,qBAAT,EAAgCC,qBAAhC,EAAuDC,kBAAvD,QAAiF,4BAAjF;;AAEA,MAAMC,MAAM,GAAG,CAACC,KAAD,EAAQC,QAAR,KAAqB,MAAOC,QAAP,IAAoB;AACtDA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEV,mBAAP;AAA4BW,IAAAA,OAAO,EAAE;AAACJ,MAAAA,KAAD;AAAQC,MAAAA;AAAR;AAArC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,IAAN,CAAW,mBAAX,EAAgC;AAACN,MAAAA,KAAD;AAAQC,MAAAA;AAAR,KAAhC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET,mBAAP;AAA4BU,MAAAA,OAAO,EAAEC;AAArC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AAED,GALD,CAKE,OAAOK,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,gBAAP;AAAyBS,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAAxC,KAAD,CAAR;AAED;AACF,CAXD;;AAaA,MAAMC,QAAQ,GAAG,CAACC,IAAD,EAAOb,KAAP,EAAcC,QAAd,KAA2B,MAAOC,QAAP,IAAoB;AAC9DA,EAAAA,QAAQ,CAAC;AAACC,IAAAA,IAAI,EAAEP,qBAAP;AAA8BQ,IAAAA,OAAO,EAAE;AAACS,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd;AAAvC,GAAD,CAAR;;AACA,MAAI;AACF,UAAM;AAAEI,MAAAA;AAAF,QAAW,MAAMd,KAAK,CAACe,IAAN,CAAW,qBAAX,EAAkC;AAACO,MAAAA,IAAD;AAAOb,MAAAA,KAAP;AAAcC,MAAAA;AAAd,KAAlC,CAAvB;AACAC,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,qBAAP;AAA8BO,MAAAA,OAAO,EAAEC;AAAvC,KAAD,CAAR;AACAb,IAAAA,MAAM,CAACe,GAAP,CAAW,UAAX,EAAuBC,IAAI,CAACC,SAAL,CAAeJ,IAAf,CAAvB;AAED,GALD,CAKE,OAAOK,KAAP,EAAc;AACdR,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,kBAAP;AAA2BM,MAAAA,OAAO,EAAEM,KAAK,CAACC;AAA1C,KAAD,CAAR;AAED;AACF,CAXD;;AAaA,SAASZ,MAAT,EAAiBa,QAAjB","sourcesContent":["import axios from 'axios';\nimport Cookie from 'js-cookie';\nimport { USER_SIGNIN_REQUEST, USER_SIGNIN_SUCCESS, USER_SIGNIN_FAIL } from '../constants/userConstants';\nimport { USER_REGISTER_REQUEST, USER_REGISTER_SUCCESS, USER_REGISTER_FAIL } from '../constants/userConstants';\n\nconst signin = (email, password) => async (dispatch) => {\n  dispatch({type: USER_SIGNIN_REQUEST, payload: {email, password}});\n  try {\n    const { data } = await axios.post('/api/users/signin', {email, password});\n    dispatch({type: USER_SIGNIN_SUCCESS, payload: data})\n    Cookie.set('userInfo', JSON.stringify(data));\n\n  } catch (error) {\n    dispatch({type: USER_SIGNIN_FAIL, payload: error.message});\n\n  }\n}\n\nconst register = (name, email, password) => async (dispatch) => {\n  dispatch({type: USER_REGISTER_REQUEST, payload: {name, email, password}});\n  try {\n    const { data } = await axios.post('/api/users/register', {name, email, password});\n    dispatch({type: USER_REGISTER_SUCCESS, payload: data})\n    Cookie.set('userInfo', JSON.stringify(data));\n\n  } catch (error) {\n    dispatch({type: USER_REGISTER_FAIL, payload: error.message});\n\n  }\n}\n\nexport { signin, register }\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL } from \"../constants/productConstants\";\nimport { PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\nimport axios from 'axios';\n\nconst listProducts = () => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_LIST_REQUEST\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products\");\n    dispatch({\n      type: PRODUCT_LIST_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_LIST_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nconst saveProduct = product => async (dispatch, getState) => {\n  try {\n    dispatch({\n      type: PRODUCT_SAVE_REQUEST,\n      payload: product\n    });\n    const {\n      userSignin: {\n        userInfo\n      }\n    } = getState();\n    const {\n      data\n    } = await axios.post('/api/products', product, {\n      headers: {\n        'Authorization': 'Bearer ' + token\n      }\n    });\n    dispatch({\n      type: PRODUCT_SAVE_SUCCESS,\n      paylod: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_SAVE_FAIL,\n      paylod: error.message\n    });\n  }\n};\n\nconst detailsProduct = productId => async dispatch => {\n  try {\n    dispatch({\n      type: PRODUCT_DETAILS_REQUEST,\n      payload: productId\n    });\n    const {\n      data\n    } = await axios.get(\"/api/products/\" + productId);\n    dispatch({\n      type: PRODUCT_DETAILS_SUCCESS,\n      payload: data\n    });\n  } catch (error) {\n    dispatch({\n      type: PRODUCT_DETAILS_FAIL,\n      payload: error.message\n    });\n  }\n};\n\nexport { listProducts, detailsProduct };","map":{"version":3,"sources":["/Users/akhilgupta/Documents/apps baby/Amazona/frontend/src/actions/productActions.js"],"names":["PRODUCT_LIST_REQUEST","PRODUCT_LIST_SUCCESS","PRODUCT_LIST_FAIL","PRODUCT_DETAILS_REQUEST","PRODUCT_DETAILS_SUCCESS","PRODUCT_DETAILS_FAIL","axios","listProducts","dispatch","type","data","get","payload","error","message","saveProduct","product","getState","PRODUCT_SAVE_REQUEST","userSignin","userInfo","post","headers","token","PRODUCT_SAVE_SUCCESS","paylod","PRODUCT_SAVE_FAIL","detailsProduct","productId"],"mappings":"AAAA,SAASA,oBAAT,EAA+BC,oBAA/B,EAAqDC,iBAArD,QAA8E,+BAA9E;AACA,SAASC,uBAAT,EAAkCC,uBAAlC,EAA2DC,oBAA3D,QAAuF,+BAAvF;AACA,OAAOC,KAAP,MAAkB,OAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAM,MAAOC,QAAP,IAAoB;AAC7C,MAAI;AAEFA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAET;AAAP,KAAD,CAAR;AACA,UAAM;AAACU,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,eAAV,CAArB;AACAH,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAER,oBAAP;AAA6BW,MAAAA,OAAO,EAAEF;AAAtC,KAAD,CAAR;AACD,GALD,CAMA,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEP,iBAAP;AAA0BU,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AAEF,CAXD;;AAaA,MAAMC,WAAW,GAAIC,OAAD,IAAa,OAAOR,QAAP,EAAiBS,QAAjB,KAA8B;AAC7D,MAAI;AACFT,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAES,oBAAR;AAA8BN,MAAAA,OAAO,EAAEI;AAAvC,KAAD,CAAR;AACA,UAAM;AAAEG,MAAAA,UAAU,EAAE;AAAEC,QAAAA;AAAF;AAAd,QAA+BH,QAAQ,EAA7C;AACA,UAAM;AAAEP,MAAAA;AAAF,QAAW,MAAMJ,KAAK,CAACe,IAAN,CAAW,eAAX,EAA4BL,OAA5B,EAAqC;AAACM,MAAAA,OAAO,EAAE;AACpE,yBAAiB,YAAYC;AADuC;AAAV,KAArC,CAAvB;AAGAf,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEe,oBAAR;AAA8BC,MAAAA,MAAM,EAAEf;AAAtC,KAAD,CAAR;AACD,GAPD,CAOE,OAAOG,KAAP,EAAc;AACdL,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAEiB,iBAAR;AAA2BD,MAAAA,MAAM,EAAEZ,KAAK,CAACC;AAAzC,KAAD,CAAR;AACD;AACF,CAXD;;AAaA,MAAMa,cAAc,GAAIC,SAAD,IAAe,MAAOpB,QAAP,IAAoB;AACxD,MAAI;AAEFA,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEN,uBAAP;AAAgCS,MAAAA,OAAO,EAAEgB;AAAzC,KAAD,CAAR;AACA,UAAM;AAAClB,MAAAA;AAAD,QAAS,MAAMJ,KAAK,CAACK,GAAN,CAAU,mBAAmBiB,SAA7B,CAArB;AACApB,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEL,uBAAP;AAAgCQ,MAAAA,OAAO,EAAEF;AAAzC,KAAD,CAAR;AACD,GALD,CAMA,OAAOG,KAAP,EAAc;AACZL,IAAAA,QAAQ,CAAC;AAACC,MAAAA,IAAI,EAAEJ,oBAAP;AAA6BO,MAAAA,OAAO,EAAEC,KAAK,CAACC;AAA5C,KAAD,CAAR;AACD;AAEF,CAXD;;AAaA,SAASP,YAAT,EAAuBoB,cAAvB","sourcesContent":["import { PRODUCT_LIST_REQUEST, PRODUCT_LIST_SUCCESS, PRODUCT_LIST_FAIL } from \"../constants/productConstants\";\nimport { PRODUCT_DETAILS_REQUEST, PRODUCT_DETAILS_SUCCESS, PRODUCT_DETAILS_FAIL } from \"../constants/productConstants\";\nimport axios from 'axios';\n\nconst listProducts = () => async (dispatch) => {\n  try {\n\n    dispatch({type: PRODUCT_LIST_REQUEST});\n    const {data} = await axios.get(\"/api/products\");\n    dispatch({type: PRODUCT_LIST_SUCCESS, payload: data});\n  }\n  catch (error) {\n    dispatch({type: PRODUCT_LIST_FAIL, payload: error.message})\n  }\n\n}\n\nconst saveProduct = (product) => async (dispatch, getState) => {\n  try {\n    dispatch({ type: PRODUCT_SAVE_REQUEST, payload: product })\n    const { userSignin: { userInfo } } = getState();\n    const { data } = await axios.post('/api/products', product, {headers: {\n      'Authorization': 'Bearer ' + token\n    }});\n    dispatch({ type: PRODUCT_SAVE_SUCCESS, paylod: data });\n  } catch (error) {\n    dispatch({ type: PRODUCT_SAVE_FAIL, paylod: error.message });\n  }\n}\n\nconst detailsProduct = (productId) => async (dispatch) => {\n  try {\n\n    dispatch({type: PRODUCT_DETAILS_REQUEST, payload: productId});\n    const {data} = await axios.get(\"/api/products/\" + productId);\n    dispatch({type: PRODUCT_DETAILS_SUCCESS, payload: data});\n  }\n  catch (error) {\n    dispatch({type: PRODUCT_DETAILS_FAIL, payload: error.message})\n  }\n\n}\n\nexport { listProducts, detailsProduct }\n"]},"metadata":{},"sourceType":"module"}